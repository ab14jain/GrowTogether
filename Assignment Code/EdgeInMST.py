#https://www.scaler.com/academy/mentee-dashboard/class/325388/homework/problems/9335?navref=cl_tt_nv

from collections import defaultdict
import heapq


class Solution:
    # @param A : integer
    # @param B : list of list of integers
    # @return a list of integers
    def solve(self, A, B):

        adj = defaultdict(list)
        r = len(B)
        c = len(B[0])

        if A-1 == r:
            return [1]*r
        
        ans = [0]*(r)
        edges = {}
        visited = [False]*(max(A,r)+1)
        for i in range(r):  
            u, v, c = B[i]
            adj[u].append([c,v,u])
            adj[v].append([c,u,v])
            edges[(u,v)] = 0
     

        min_heap = []
        heapq.heappush(min_heap, [0,1,1])
        while min_heap:
            cst,e,p = heapq.heappop(min_heap)
            if visited[e]:
                continue
            visited[e] = True   
            edges[(p,e)] = 1         
            for nbr in adj[e]:
                if not visited[nbr[1]]:                     
                    heapq.heappush(min_heap, nbr)

        for i in range(r):  
            u, v, c = B[i]
            ans[i] = edges[(u,v)]
        return ans
    
s=Solution()
print(s.solve(68,[[26,43,131],[5,40,847],[23,35,988],[21,59,446],[29,42,806],[6,15,617],[6,24,751],[15,40,490],[13,15,339],[1,48,964],[27,39,136],[9,42,698],[49,67,210],[40,58,631],[47,54,225],[2,10,909],[45,59,738],[2,8,475],[14,27,921],[40,57,373],[13,58,294],[2,46,856],[52,57,735],[8,21,562],[22,60,57],[4,49,607],[33,49,185],[30,64,76],[12,43,383],[7,41,120],[16,67,742],[24,53,433],[10,12,685],[6,46,780],[9,19,280],[19,41,284],[35,41,668],[64,65,837],[50,60,126],[3,7,119],[28,64,738],[49,51,29],[12,28,120],[10,40,578],[3,36,738],[8,9,92],[17,54,557],[9,30,796],[1,59,61],[29,62,902],[16,39,794],[7,44,433],[42,66,137],[2,33,581],[11,39,876],[12,16,908],[22,65,185],[11,62,75],[7,31,720],[15,32,791],[21,38,477],[23,41,42],[21,52,352],[25,57,330]]))
print(s.solve(85,[[40,57,44],[12,56,377],[2,36,315],[44,78,627],[23,28,118],[13,40,335],[49,85,621],[1,43,172],[25,63,793],[19,33,965],[5,57,155],[28,50,867],[1,3,694],[32,59,665],[9,45,776],[34,47,1],[25,82,213],[11,66,101],[29,79,552],[9,36,477],[23,25,380],[34,57,944],[20,84,878],[9,52,790],[13,24,362],[8,67,386],[68,69,273],[8,69,435],[49,70,145],[25,80,562],[49,54,564],[22,85,505],[63,81,947],[30,51,889],[28,39,309],[56,71,158],[55,65,431],[33,77,124],[25,43,465],[39,41,75],[2,42,347],[48,52,838],[72,79,982],[43,79,319],[20,37,612],[8,11,293],[8,38,592],[29,85,833],[5,16,124],[19,79,462],[43,66,992],[12,77,462],[19,29,331],[37,64,499],[5,15,370],[12,75,292],[6,24,401],[52,78,180],[15,25,118],[51,78,318]]))
print(s.solve(2,[[1,2,42]]))
print(s.solve(4,[[1,2,437],[2,3,392],[3,4,605]]))
print(s.solve(3,[[1, 2, 2],[1, 3, 2],[2, 3, 3]]))
print(s.solve(5,[[1,2,282],[1,3,828],[2,3,962],[1,4,492],[4,3,996],[4,5,943],[3,5,828]]))
print(s.solve(7,[[1,2,468],[2,3,335],[3,1,501],[2,4,170],[2,5,725],[2,7,479],[4,6,359],[5,6,963]]))


